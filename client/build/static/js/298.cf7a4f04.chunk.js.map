{"version":3,"file":"static/js/298.cf7a4f04.chunk.js","mappings":"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","sources":["components/ProductList/index.jsx","pages/SubNavigation/index.jsx"],"sourcesContent":["import './index.css'\r\nimport {Component} from 'react'\r\nimport ProductDetail from '../ProductDetail'\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {AiOutlineStar,AiFillStar,AiOutlineShoppingCart} from 'react-icons/ai'\r\nimport {BsFillCartCheckFill} from 'react-icons/bs'\r\nimport Button from '@mui/material/Button';\r\nimport store from '../../redux/store'\r\nimport {AddToFavour,RemoveFromFavour} from '../../redux/action/favour_action'\r\nimport {AddOneToCart,OpenCartDrawer} from '../../redux/action/cart_action'\r\nimport imageURL from '../../imageURL';\r\n\r\nexport default class ProductList extends Component {\r\n  \r\n  state={dialogOpen:false,dialogItem:null}\r\n  // redirect_to_https=()=>{\r\n  //   this.navigate('/login')\r\n  // }\r\n  setDialogItem=(item)=>{\r\n    //set item to display in dialog\r\n    this.setState({dialogItem:item})\r\n  }\r\n  closeDialog=()=>{\r\n    //close dialog\r\n     this.setState({dialogOpen:false})\r\n  }\r\n  openDialog=(item)=>{\r\n    //set item to display in dialog and open the dialog\r\n    this.setState({dialogItem:item})\r\n    this.setState({dialogOpen:true})\r\n  }\r\n  addToFavour=(obj)=>{\r\n    //store item to Favour with adding property of type/subType\r\n    let newObj={...obj}\r\n    newObj.type=this.props.type\r\n    newObj.subType=this.props.subType\r\n    store.dispatch(AddToFavour(newObj))\r\n  }\r\n  removeFromFavour=(obj)=>{\r\n    //remove from Favour \r\n    store.dispatch(RemoveFromFavour(obj))\r\n  }\r\n  openCart=()=>{\r\n    //close dialog and open Cart Drawer\r\n    this.closeDialog()\r\n    store.dispatch(OpenCartDrawer(true))\r\n  }\r\n  addOneToCart=(item)=>{\r\n    //store item to Cart with adding property of type/subType,and orderNum default 1\r\n    let newitem={...item}\r\n    newitem.type=this.props.type\r\n    newitem.subType=this.props.subType\r\n    store.dispatch(AddOneToCart({...newitem,orderNum:1}))\r\n  }\r\n  render(){\r\n    const {type,subType,list,loadMore,hasMoreToLoad}=this.props;\r\n     return(\r\n        <div className=\"ProductList_wrapper\">\r\n            <InfiniteScroll\r\n              dataLength={list?.length}\r\n              next={loadMore}\r\n              hasMore={hasMoreToLoad}\r\n              loader={<h4>Loading...</h4>}\r\n              className=\"ProductList_tableless\" \r\n            >\r\n            {\r\n              list?.map((obj)=>{\r\n                return (\r\n                  <Card key={obj.PID} className=\"ProductList_card\">\r\n                    <CardMedia\r\n                      className=\"ProductList_image\"\r\n                      image={`${imageURL}/${obj.PID}`}\r\n                      onClick={()=>this.openDialog(obj)}\r\n                    />\r\n                    <CardContent>\r\n                      <div>\r\n                          <span className=\"ProductList_card_itemName\" onClick={()=>this.openDialog(obj)}>\r\n                            {obj.name } \r\n                          </span>\r\n                          &nbsp;&nbsp;&nbsp;\r\n                          <span className=\"ProductList_card_itemComeFrom\">\r\n                            {obj.comeFrom}\r\n                          </span>\r\n                      </div>\r\n                      <div className=\"ProductList_card_itemPrice\">\r\n                        ${obj.price} Now! <span className=\"ProductList_card_itemPrevPrice\">${obj.prevPrice}</span>\r\n                      </div>\r\n                      \r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Button variant=\"contained\" onClick={()=>this.openDialog(obj)} size=\"median\">\r\n                        Detail\r\n                    </Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    { \r\n                      store.getState().FavourReducer.favourList.find(item => item.PID===obj.PID)?(\r\n                          <Button variant=\"outlined\" onClick={()=>this.removeFromFavour(obj)} size=\"median\" color=\"secondary\">\r\n                            <AiFillStar size={28}/>\r\n                          </Button>\r\n                      ):(\r\n                        <Button variant=\"outlined\" onClick={()=>this.addToFavour(obj)} size=\"median\" color=\"secondary\">\r\n                          <AiOutlineStar size={28}/>\r\n                        </Button>\r\n                      )\r\n                    }\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    { \r\n                      store.getState().CartReducer.cartList.find(item => item.PID===obj.PID)?(\r\n                          <Button variant=\"outlined\" onClick={this.openCart} size=\"median\" color=\"success\" >\r\n                            <BsFillCartCheckFill size={28}/>\r\n                          </Button>\r\n                      ):(\r\n                        <Button variant=\"outlined\" onClick={()=>this.addOneToCart(obj)} size=\"median\" color=\"secondary\" >\r\n                          <AiOutlineShoppingCart size={28}/>\r\n                        </Button>\r\n                      )\r\n                    }\r\n                        \r\n                    </CardActions>\r\n                  </Card>\r\n\r\n              )})\r\n            }\r\n            </InfiniteScroll>\r\n            <ProductDetail {...this.state.dialogItem} type={type} subType={subType} open={this.state.dialogOpen} \r\n            openDialog={this.openDialog} closeDialog={this.closeDialog} />\r\n        </div>      \r\n      );\r\n  }\r\n\r\n}\r\n","import './index.css'\r\nimport { useParams,Link } from 'react-router-dom';\r\nimport {BsArrowDown} from 'react-icons/bs'\r\nimport React ,{useState,useEffect}from 'react';\r\nimport ProductList from '../../components/ProductList';\r\n/*import Pagination from '@mui/material/Pagination';*/\r\nimport store from '../../redux/store'\r\nimport {GiSeaDragon} from 'react-icons/gi'\r\n\r\n//some note: \r\n//origin design to implement pagination,but for fulfilling assignment requirement\r\n//switch to infinte scroll \r\n\r\n\r\nexport default function SubNavigation() {\r\n    const prolist=store.getState().ItemReducer.itemList;//list of all the item\r\n    const navlist  =store.getState().CategoryReducer.categoryList; //list of categories\r\n    const { type,subType } = useParams();//params in URL\r\n    const [showMoreMsg, setShowMoreMsg] = useState(navlist[type]?.length>4);//display the show more msg if more than 4 subtype\r\n    //const [page, setPage] = useState(1);//current page,default 1 page\r\n    // const [totalPage,setTotalPage]=useState(Math.ceil(prolist[type][subType]?.length/12)>0?Math.ceil(prolist[type][subType]?.length/12):1)//totalpage by calculation \r\n    //const [list,setList]=useState(prolist[type][subType]?.slice(page*12-12,page*12));//product list to display in Table component\r\n    const [list,setList]=useState(prolist[type][subType]?.slice(0,10));\r\n    const [loadMoreCount,setloadMoreCount]=useState(1)//similar to page implementation\r\n    const [hasMoreToLoad,setHasMoreToLoad]=useState(prolist[type][subType]?.length>10)\r\n    let ContainerRef=React.createRef()//Ref to Drawer container\r\n    function scrollHandler(){\r\n        //if not scrolled to bottom,show the message of \"More\"\r\n        setShowMoreMsg(ContainerRef.current.scrollHeight - ContainerRef.current.scrollTop !== ContainerRef.current.clientHeight);\r\n    }\r\n    function scrollDown(){\r\n        //while click the \"More\" message,directly scroll to bottom and hide the message.\r\n        ContainerRef.current.scrollTop=ContainerRef.current.scrollHeight+ContainerRef.current.clientHeight;\r\n        setShowMoreMsg(false);\r\n    }\r\n    /*\r\n    function handlePageChange(event,newValue){\r\n        //while page change,store new page value and reset list to display in table\r\n        setPage(newValue)\r\n        setList(prolist[type][subType].slice(newValue*12-12,newValue*12))\r\n    }\r\n    */\r\n\r\n    function loadMore(){\r\n        setList(list.concat(prolist[type][subType]?.slice((loadMoreCount+1)*10-10,(loadMoreCount+1)*10)))\r\n        setloadMoreCount(loadMoreCount+1)\r\n        setHasMoreToLoad((loadMoreCount+1)*10<prolist[type][subType]?.length)\r\n    }\r\n    useEffect(()=>{\r\n        //monitor type and subType changing->i.e. click Navigation bar on Header\r\n        //reset all the property\r\n        /*\r\n        setShowMoreMsg(navlist[type]?.length>4)\r\n        setTotalPage(Math.ceil(prolist[type][subType]?.length/12)>0?Math.ceil(prolist[type][subType]?.length/12):1)\r\n        setPage(1)\r\n        setList(prolist[type][subType]?.slice(0,12))\r\n        */\r\n        setloadMoreCount(1)\r\n        setHasMoreToLoad(prolist[type][subType]?.length>10)\r\n        setList(prolist[type][subType]?.slice(0,10))\r\n    },[type,subType,prolist])\r\n      return (\r\n        <div className=\"SubNavigation_wrapper\">\r\n            <div className=\"SubNavigation_leftbar\">\r\n                <div className=\"SubNavigation_hierarchicalNavigationMenu\">\r\n                    <Link className=\"SubNavigation_link\" to={'/'}>Home</Link>\r\n                    <span>&nbsp;{'>'}&nbsp;</span>\r\n                    <Link className=\"SubNavigation_link\" to={'/subNavigation/food/new'}>subNavigation</Link>\r\n                    <span>&nbsp;{'>'}&nbsp;</span>\r\n                    <Link className=\"SubNavigation_link\" to={`/subNavigation/${type}/new`}>{type}</Link>\r\n                    <span>&nbsp;{'>'}&nbsp;</span>\r\n                    <Link className=\"SubNavigation_link\" to={`/subNavigation/${type}/${subType}`}>{subType}</Link>\r\n                </div>\r\n                <GiSeaDragon size={100}/>\r\n                <div className=\"SubNavigation_Container\" onScroll={scrollHandler} ref={ContainerRef}>\r\n                    {\r\n                        navlist[type]?.map(NavsubType=>{\r\n                        return (\r\n                            <div key={NavsubType} className=\"SubNavigation_element\"  >\r\n                                <Link className=\"SubNavigation_link\" to={`/subNavigation/${type}/${NavsubType}`}>\r\n                                    {NavsubType}\r\n                                </Link>\r\n                            </div>                   \r\n                        )})\r\n                    }\r\n                    \r\n                </div>\r\n                \r\n                {   \r\n                    showMoreMsg?\r\n                        <div >\r\n\r\n                            <BsArrowDown />\r\n                                    <span className=\"SubNavigation_scrollDownText\" onClick={scrollDown}>&nbsp;MORE&nbsp;</span>\r\n                            <BsArrowDown />\r\n                        </div>\r\n                    :<div>&nbsp;</div> /* hold extra extra space -> avoid window shaking because of the message div added*/ \r\n                        \r\n                }\r\n            </div>\r\n            <div className=\"SubNavigation_rightBar\">\r\n                {/* \r\n                <Pagination \r\n                    count={totalPage} \r\n                    page={page} color=\"secondary\" size=\"large\" onChange={handlePageChange} className=\"SubNavigation_paging\" />  \r\n                */}\r\n                <ProductList type={type} subType={subType} list={list} loadMore={loadMore} hasMoreToLoad={hasMoreToLoad}/>\r\n            </div>\r\n        </div>      \r\n      );\r\n\r\n}\r\n"],"names":["ProductList","state","dialogOpen","dialogItem","setDialogItem","item","setState","closeDialog","openDialog","addToFavour","obj","newObj","type","props","subType","store","AddToFavour","removeFromFavour","RemoveFromFavour","openCart","OpenCartDrawer","addOneToCart","newitem","AddOneToCart","orderNum","this","list","loadMore","hasMoreToLoad","className","dataLength","length","next","hasMore","loader","map","Card","CardMedia","image","imageURL","PID","onClick","CardContent","name","comeFrom","price","prevPrice","CardActions","Button","variant","size","FavourReducer","favourList","find","color","CartReducer","cartList","ProductDetail","open","Component","SubNavigation","prolist","ItemReducer","itemList","navlist","CategoryReducer","categoryList","useParams","useState","showMoreMsg","setShowMoreMsg","slice","setList","loadMoreCount","setloadMoreCount","setHasMoreToLoad","ContainerRef","React","useEffect","to","onScroll","current","scrollHeight","scrollTop","clientHeight","ref","NavsubType","concat"],"sourceRoot":""}