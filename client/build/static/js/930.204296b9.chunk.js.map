{"version":3,"file":"static/js/930.204296b9.chunk.js","mappings":"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","sources":["components/ProductList/index.jsx","components/HomeProductList/index.jsx","pages/Home/index.jsx"],"sourcesContent":["import './index.css'\r\nimport {Component} from 'react'\r\nimport ProductDetail from '../ProductDetail'\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\n\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport {AiOutlineStar,AiFillStar,AiOutlineShoppingCart} from 'react-icons/ai'\r\nimport {BsFillCartCheckFill} from 'react-icons/bs'\r\nimport Button from '@mui/material/Button';\r\nimport store from '../../redux/store'\r\nimport {AddToFavour,RemoveFromFavour} from '../../redux/action/favour_action'\r\nimport {AddOneToCart,OpenCartDrawer} from '../../redux/action/cart_action'\r\nimport imageURL from '../../imageURL';\r\n\r\nexport default class ProductList extends Component {\r\n  \r\n  state={dialogOpen:false,dialogItem:null}\r\n  // redirect_to_https=()=>{\r\n  //   this.navigate('/login')\r\n  // }\r\n  setDialogItem=(item)=>{\r\n    //set item to display in dialog\r\n    this.setState({dialogItem:item})\r\n  }\r\n  closeDialog=()=>{\r\n    //close dialog\r\n     this.setState({dialogOpen:false})\r\n  }\r\n  openDialog=(item)=>{\r\n    //set item to display in dialog and open the dialog\r\n    this.setState({dialogItem:item})\r\n    this.setState({dialogOpen:true})\r\n  }\r\n  addToFavour=(obj)=>{\r\n    //store item to Favour with adding property of type/subType\r\n    let newObj={...obj}\r\n    newObj.type=this.props.type\r\n    newObj.subType=this.props.subType\r\n    store.dispatch(AddToFavour(newObj))\r\n  }\r\n  removeFromFavour=(obj)=>{\r\n    //remove from Favour \r\n    store.dispatch(RemoveFromFavour(obj))\r\n  }\r\n  openCart=()=>{\r\n    //close dialog and open Cart Drawer\r\n    this.closeDialog()\r\n    store.dispatch(OpenCartDrawer(true))\r\n  }\r\n  addOneToCart=(item)=>{\r\n    //store item to Cart with adding property of type/subType,and orderNum default 1\r\n    let newitem={...item}\r\n    newitem.type=this.props.type\r\n    newitem.subType=this.props.subType\r\n    store.dispatch(AddOneToCart({...newitem,orderNum:1}))\r\n  }\r\n  render(){\r\n    const {type,subType,list,loadMore,hasMoreToLoad}=this.props;\r\n     return(\r\n        <div className=\"ProductList_wrapper\">\r\n            <InfiniteScroll\r\n              dataLength={list?.length}\r\n              next={loadMore}\r\n              hasMore={hasMoreToLoad}\r\n              loader={<h4>Loading...</h4>}\r\n              className=\"ProductList_tableless\" \r\n            >\r\n            {\r\n              list?.map((obj)=>{\r\n                return (\r\n                  <Card key={obj.PID} className=\"ProductList_card\">\r\n                    <CardMedia\r\n                      className=\"ProductList_image\"\r\n                      image={`${imageURL}/${obj.PID}`}\r\n                      onClick={()=>this.openDialog(obj)}\r\n                    />\r\n                    <CardContent>\r\n                      <div>\r\n                          <span className=\"ProductList_card_itemName\" onClick={()=>this.openDialog(obj)}>\r\n                            {obj.name } \r\n                          </span>\r\n                          &nbsp;&nbsp;&nbsp;\r\n                          <span className=\"ProductList_card_itemComeFrom\">\r\n                            {obj.comeFrom}\r\n                          </span>\r\n                      </div>\r\n                      <div className=\"ProductList_card_itemPrice\">\r\n                        ${obj.price} Now! <span className=\"ProductList_card_itemPrevPrice\">${obj.prevPrice}</span>\r\n                      </div>\r\n                      \r\n                    </CardContent>\r\n                    <CardActions>\r\n                      <Button variant=\"contained\" onClick={()=>this.openDialog(obj)} size=\"median\">\r\n                        Detail\r\n                    </Button>\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    { \r\n                      store.getState().FavourReducer.favourList.find(item => item.PID===obj.PID)?(\r\n                          <Button variant=\"outlined\" onClick={()=>this.removeFromFavour(obj)} size=\"median\" color=\"secondary\">\r\n                            <AiFillStar size={28}/>\r\n                          </Button>\r\n                      ):(\r\n                        <Button variant=\"outlined\" onClick={()=>this.addToFavour(obj)} size=\"median\" color=\"secondary\">\r\n                          <AiOutlineStar size={28}/>\r\n                        </Button>\r\n                      )\r\n                    }\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    { \r\n                      store.getState().CartReducer.cartList.find(item => item.PID===obj.PID)?(\r\n                          <Button variant=\"outlined\" onClick={this.openCart} size=\"median\" color=\"success\" >\r\n                            <BsFillCartCheckFill size={28}/>\r\n                          </Button>\r\n                      ):(\r\n                        <Button variant=\"outlined\" onClick={()=>this.addOneToCart(obj)} size=\"median\" color=\"secondary\" >\r\n                          <AiOutlineShoppingCart size={28}/>\r\n                        </Button>\r\n                      )\r\n                    }\r\n                        \r\n                    </CardActions>\r\n                  </Card>\r\n\r\n              )})\r\n            }\r\n            </InfiniteScroll>\r\n            <ProductDetail {...this.state.dialogItem} type={type} subType={subType} open={this.state.dialogOpen} \r\n            openDialog={this.openDialog} closeDialog={this.closeDialog} />\r\n        </div>      \r\n      );\r\n  }\r\n\r\n}\r\n","import './index.css'\r\nimport ProductList from '../../components/ProductList'\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport {useState} from 'react'\r\nimport store from '../../redux/store';\r\nfunction HomeProductList(props) {\r\n  //component that display products in Home page,include the Tab,reuse ProductList component\r\n  const [value, setValue] = useState(0);//value to notify Tabs Component of tab change\r\n  const [subtype, setSubtype] = useState(Object.keys(store.getState().ItemReducer.itemList[props.name])?.[0]);//store current displaying subType\r\n  const [listToDisplay,setlistToDisplay]=useState(store.getState().ItemReducer.itemList[props.name][subtype]?.slice(0,12));\r\n  const handleListChange = (event)=> {\r\n    //handler while clicking different Tabs,reset the current handling subType and the list to display\r\n    setSubtype(event.target.textContent)\r\n    setlistToDisplay(store.getState().ItemReducer.itemList[props.name][event.target.textContent]?.slice(0,12))\r\n  };\r\n  const handleTabChange=(event,newValue)=>{\r\n    //while click to new Tabs,update value to move to next Tab\r\n    setValue(newValue)\r\n  }\r\n  return (\r\n    <div className=\"Home_listItem\" >\r\n            <Tabs value={value} onChange={handleTabChange}  \r\n            scrollButtons allowScrollButtonsMobile  className=\"Home_listTabs\" textColor=\"secondary\">\r\n            {\r\n                props?.value?.map((subtype)=>{\r\n                  return (\r\n                      <Tab \r\n                        key={subtype}\r\n                        label={<span className=\"Home_listTab\">{subtype}</span>} \r\n                        onClick={handleListChange} \r\n                      />\r\n                  )\r\n                })\r\n            }\r\n            </Tabs>\r\n          \r\n        <ProductList type={props?.name} subType={subtype} list={listToDisplay}/>\r\n        \r\n    </div>\r\n   \r\n\r\n  );\r\n}\r\n\r\nexport default HomeProductList;","import './index.css'\r\nimport {useState} from 'react'\r\nimport HomeProductList from '../../components/HomeProductList'\r\nimport {FaArrowAltCircleRight} from 'react-icons/fa'\r\nimport { NavLink } from 'react-router-dom'\r\nimport store from '../../redux/store'\r\nexport default function Home() {\r\n  const list_to_display=store.getState().HomeListReducer.homeList;\r\n  //whenever store data change,rerender whole APP by update state\r\n  const [forceUpdate, setForceUpdate] = useState(false);\r\n  store.subscribe(()=>{\r\n    //update HomeProductList component->in favour/cart depends on data in store\r\n    setForceUpdate(!forceUpdate)\r\n  })\r\n\r\n  const scrollToTop=()=>{\r\n    window.scrollTo(0, 0)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"Home_wrapper\">\r\n      <div className=\"Home_imageWrapper\">\r\n        <img\r\n          src='../../../home_img.jpg'\r\n          alt=\"match not found\"  \r\n          className=\"Home_image\"\r\n        /> \r\n        </div>\r\n        <br/>\r\n        <div className=\"Home_listContainer\">\r\n          {list_to_display?.map((obj)=>{\r\n              return (\r\n                <HomeProductList key={obj.name} {...obj}/>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      <br/>\r\n        <div className=\"Home_linkWrapper\">\r\n          <NavLink to=\"/subNavigation/food/new\" onClick={scrollToTop}>\r\n              <button className=\"Home_viewMore\" >\r\n                View More<FaArrowAltCircleRight size={30}/>\r\n              </button>\r\n          </NavLink>\r\n        </div>\r\n    </div>\r\n\r\n   \r\n\r\n  );\r\n}"],"names":["ProductList","state","dialogOpen","dialogItem","setDialogItem","item","setState","closeDialog","openDialog","addToFavour","obj","newObj","type","props","subType","store","AddToFavour","removeFromFavour","RemoveFromFavour","openCart","OpenCartDrawer","addOneToCart","newitem","AddOneToCart","orderNum","this","list","loadMore","hasMoreToLoad","className","dataLength","length","next","hasMore","loader","map","Card","CardMedia","image","imageURL","PID","onClick","CardContent","name","comeFrom","price","prevPrice","CardActions","Button","variant","size","FavourReducer","favourList","find","color","CartReducer","cartList","ProductDetail","open","Component","useState","value","setValue","Object","keys","ItemReducer","itemList","subtype","setSubtype","slice","listToDisplay","setlistToDisplay","handleListChange","event","target","textContent","Tabs","onChange","newValue","scrollButtons","allowScrollButtonsMobile","textColor","Tab","label","Home","list_to_display","HomeListReducer","homeList","forceUpdate","setForceUpdate","src","alt","to","window","scrollTo"],"sourceRoot":""}